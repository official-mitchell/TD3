services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - '3000:80'
    depends_on:
      - backend
    networks:
      - td3-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - '3333:3333'
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://td3_user:td3_password@mongodb:27017/?authSource=admin
    depends_on:
      mongodb:
        condition: service_started
    volumes: # Add this section
      - ./backend:/app/backend
      - ./node_modules:/app/node_modules
    networks:
      - td3-network

  mongodb:
    image: mongo:latest
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: td3_user
      MONGO_INITDB_ROOT_PASSWORD: td3_password
    command: mongod --bind_ip_all
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ros
    healthcheck:
      test: ['CMD', 'mongod', '--eval', '''db.runCommand("ping").ok''']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - td3-network

networks:
  td3-network:
    driver: bridge

volumes:
  mongodb_data:
